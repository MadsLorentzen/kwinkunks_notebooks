%!PS-Adobe-3.0
%%Creator: (ImageMagick)
%%Title: (sys)
%%CreationDate: (2014-10-05T10:28:23-03:00)
%%BoundingBox: 419 413 432 439
%%HiResBoundingBox: 419 413 432 439
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Orientation: Portrait
%%PageOrder: Ascend
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Times-Roman findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
  showpage
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 419 413 432 439
DisplayImage
419 413
13 26
12
13 26
0
0
5A6E527D96763839382928291414150707080505060000007E7C811E1E1E1B1B1B1B1B1BE4E4E4
8A7291D4D3D4E4E4E4F1F1F1F8F8F7FAFBFAFAFBFAFFFFFF7E807BE1E1E1E4E4E4E4E4E41B1B1B
EFEFEEF2F3F2F7F7F6FAFAF9FAFBFAF9FAF9F9F9F8FFFFFF7B7D78E1E1E1E4E4E4E4E4E41B1B1B
F7F8F6F7F8F7F7F8F7F7F8F7F7F8F6F7F7F6F7F7F6FFFFFF777A75E2E2E2E4E4E4E4E4E41B1B1B
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDADBD98B8C89DEDEDEE4E4E4E4E4E41B1B1B
918E93918F949290949290959391959391969290957F7D816363643737371D1D1D1B1B1BE4E4E4
C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C6C6C6DDDDDDE4E4E4E4E4E4E4E4E4
E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E4E4E4E4E4E4E4E4E4E4E4E4
E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4
A3A3A3A3A3A3A3A3A3A3A3A3A3A3A3A3A3A3A3A3A3A3A3A3A3A3A3A3A3A3A3A3A3A3A3A3A3A3A3
C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9
B6B8B3BABBB8BDBFBCC6C6C6C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7
F7F8F7F1F2F0D6D8D4AFB2ABBABBB9C3C3C3C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4
EEEFECF5F5F3FAFAFAF9F9F9CCCECAABAEA8BEBEBEC1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1
E7E9E5E5E8E3D6D9D4ECEDECFEFEFEDCDDDBA8ABA5BDBDBDBEBEBEBEBEBEBEBEBEBEBEBEBEBEBE
E8E9E5E6E8E3E0E2DDC7C9C5FFFFFFFFFFFFCECECCA8AAA5BCBCBCBCBCBCBCBCBCBCBCBCBCBCBC
E7E9E5E6E8E4E5E7E2C1C4C0FEFEFEFFFFFFFCFCFCBBBDBAB0B1B0B9B9B9B9B9B9B9B9B9B9B9B9
E7E9E5E6E8E4E5E7E3C9CBC7B5B7B4BFC0BEFDFDFDD9D9D8A6A7A4B6B6B6B6B6B6B6B6B6B6B6B6
7F6187E2E2E0E6E8E4DDDFDBC6C7C4A5A6A3ABABAAE7E8E79D9F9AB4B4B4B4B4B4B4B4B4B4B4B4
D3C8D5816389E2E3E0E6E8E4E5E7E3E5E7E3DCDED9EAEAEA959791B1B1B1B1B1B1B1B1B1B1B1B1
E3DBE5C2B3C57D6085E3E4E1E8EAE6E8EAE6E8EAE6FEFEFE969894ADADADAEAEAEAEAEAEAEAEAE
B39FB7C2B2C5D3C9D67E6085E7E6E5ECEDEAEBEDE9FEFFFE90938DAAAAAAABABABABABABABABAB
A78FADD5CAD8C4B5CAA38CA9876A8DEFF0EDEEF0EDFFFFFF8D8F8AA9A9A9AAAAAAAAAAAAAAAAAA
CABDCFB09CB7C6B8CC957C9E977F9EF2F3F1F2F3F0FFFFFF8A8C87A7A7A7A8A8A8A8A8A8A8A8A8
E2DBE7D5CADBA08AA7947B99F5F4F4F5F6F4F5F6F4FFFFFF868984A6A6A6A7A7A7A7A7A7A7A7A7
EFEBF2A08AA88C7593EBEBEBF4F4F3F7F8F7F8F8F7FFFFFF838680A5A5A5A6A6A6A6A6A6A6A6A6

%%PageTrailer
%%Trailer
%%EOF
